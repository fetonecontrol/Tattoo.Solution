// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tattoo.Models;

namespace Tattoo.Migrations
{
    [DbContext(typeof(TattooContext))]
    [Migration("20200804225518_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tattoo.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Specialty");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Tattoo.Models.ArtistClientStyle", b =>
                {
                    b.Property<int>("ArtistClientStyleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ArtistId");

                    b.Property<int?>("ClientId");

                    b.Property<int?>("StyleId");

                    b.HasKey("ArtistClientStyleId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ClientId");

                    b.HasIndex("StyleId");

                    b.ToTable("ArtistClientStyle");
                });

            modelBuilder.Entity("Tattoo.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApptDate");

                    b.Property<int?>("ArtistId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Services");

                    b.HasKey("ClientId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Tattoo.Models.Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("StyleId");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("Tattoo.Models.ArtistClientStyle", b =>
                {
                    b.HasOne("Tattoo.Models.Artist", "Artist")
                        .WithMany("RelationShips")
                        .HasForeignKey("ArtistId");

                    b.HasOne("Tattoo.Models.Client", "Client")
                        .WithMany("RelationShips")
                        .HasForeignKey("ClientId");

                    b.HasOne("Tattoo.Models.Style", "Style")
                        .WithMany("RelationShips")
                        .HasForeignKey("StyleId");
                });

            modelBuilder.Entity("Tattoo.Models.Client", b =>
                {
                    b.HasOne("Tattoo.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");
                });
#pragma warning restore 612, 618
        }
    }
}
